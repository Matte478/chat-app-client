//
//  REM FONT SIZING
//––––––––––––––––––––––––––––––––––––––––––––––––––

@mixin font-size($sizeValue: 16, $line-height: null) {
  font-size: $sizeValue * 1px;
  font-size: ($sizeValue / 10) * 1rem;

  @if $line-height != null {
    line-height: $line-height/$sizeValue * 1em;
  }
}

//
//  HOVERS
//––––––––––––––––––––––––––––––––––––––––––––––––––

@mixin responsive-hover() {
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      @content;
    }
  }

  &:active {
    @content;
  }
}

//
//  PSEUDO ELEMENT
//––––––––––––––––––––––––––––––––––––––––––––––––––

@mixin pseudo($content: '', $display: block, $position: absolute) {
  content: $content;
  display: $display;
  position: $position;
}

//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media screen and (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Undefined breakpoint value: #{$breakpoint}. Using as a custom breakpoint';

    // Write the media query.
    @media screen and (min-width: #{$breakpoint}) {
      @content;
    }
  }
}

//
//  RESPOND BELOW
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-below(sm) {}
@mixin respond-below($breakpoint) {
  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {
    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media screen and (max-width: ($breakpoint-value - 1)) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {
    // Log a warning.
    @warn 'Undefined breakpoint value: #{$breakpoint}. Using as a custom breakpoint.';

    // Write the media query.
    @media screen and (max-width: #{$breakpoint}) {
      @content;
    }
  }
}

//
//  RESPOND BETWEEN
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-between(sm, md) {}
@mixin respond-between($lower, $upper) {
  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);

    // Write the media query.
    @media screen and (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }

    // If one or both of the breakpoints don't exist.
  } @else {
    // If lower breakpoint is invalid.
    @if (map-has-key($breakpoints, $lower) == false) {
      // Log a warning.
      @warn 'Your lower breakpoint is undefined: #{$lower}. Using as a custom breakpoint.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($breakpoints, $upper) == false) {
      // Log a warning.
      @warn 'Your upper breakpoint is undefined: #{$upper}. Using as a custom breakpoint.';
    }

    // Write the media query.
    @media screen and (min-width: #{$lower}) and (max-width: (#{$upper-breakpoint})) {
      @content;
    }
  }
}
